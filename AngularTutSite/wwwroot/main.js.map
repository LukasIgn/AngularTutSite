{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create-curd-snack/create-curd-snack.component.html","webpack:///./src/app/create-curd-snack/create-curd-snack.component.ts","webpack:///./src/app/curd-snack.service.ts","webpack:///./src/app/edit-curd-snack/edit-curd-snack.component.html","webpack:///./src/app/edit-curd-snack/edit-curd-snack.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateCurdSnackComponent } from './create-curd-snack/create-curd-snack.component';\nimport { EditCurdSnackComponent } from './edit-curd-snack/edit-curd-snack.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: CreateCurdSnackComponent\n  },\n  {\n     path: 'create-curd-snack', component: CreateCurdSnackComponent\n  },\n  {\n    path: 'edit-curd-snack', component: EditCurdSnackComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav #drawer\r\n               class=\"sidenav\"\r\n               fixedInViewport=\"true\"\r\n               [attr.role]=\"isHandset ? 'dialog' : 'navigation'\"\r\n               [mode]=\"(isHandset | async)!.matches ? 'over' : 'side'\"\r\n               [opened]=\"!(isHandset | async)!.matches\">\r\n    <mat-toolbar color=\"primary\">Pasirinkimai</mat-toolbar>\r\n    <mat-nav-list>\r\n      <a mat-list-item routerLink=\"/create-curd-snack\">Susikurk sūrelį</a>\r\n      <a mat-list-item routerLink=\"/edit-curd-snack\">Koreguok sūrelius</a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n\r\n  <div class=\"page-wrap\">\r\n    <header role=\"banner\">\r\n      <mat-toolbar color=\"primary\">\r\n        <button type=\"button\"\r\n                aria-label=\"Toggle sidenav\"\r\n                mat-icon-button\r\n                (click)=\"drawer.toggle()\"\r\n                *ngIf=\"(isHandset | async)!.matches\">\r\n          <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n        </button>\r\n        <span>Sūrelių pasaulis</span>\r\n      </mat-toolbar>\r\n    </header>\r\n    <main class=\"content\">\r\n      <router-outlet></router-outlet>\r\n    </main>\r\n    <footer></footer>\r\n  </div>\r\n</mat-sidenav-container>\r\n\r\n\r\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  appName = 'Sūrelių pasaulis';\n  isHandset: Observable<BreakpointState> = this.breakpointObserver.observe(Breakpoints.Handset);\n\n  constructor(private breakpointObserver: BreakpointObserver) { }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatAutocompleteModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTabsModule,\n  MatTooltipModule,\n  MatStepperModule, \n  MatToolbarModule, \n  MatButtonModule, \n  MatSidenavModule,\n  MatIconModule, \n  MatListModule, \n  MatFormFieldModule, \n  MatInputModule, \n  MatTableModule \n} from '@angular/material';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CreateCurdSnackComponent } from './create-curd-snack/create-curd-snack.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EditCurdSnackComponent } from './edit-curd-snack/edit-curd-snack.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    CreateCurdSnackComponent,\n    EditCurdSnackComponent\n  ],\n  imports: [\n    BrowserModule,\n    ServiceWorkerModule.register('/ngsw-worker.js', { enabled: environment.production }),\n    BrowserAnimationsModule,\n    LayoutModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    NgbModule.forRoot(),\n    HttpClientModule, \n    MatFormFieldModule, \n    FormsModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"jumbotron\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 offset-md-3\">\r\n        <h3>Susikurk savo sūrelį</h3>\r\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"form-group\">\r\n            <label>Sūrelio pavadinimas</label>\r\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\r\n            <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.name.errors.required\">Sūrelio pavadinimas privalomas</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Tavo el. paštas</label>\r\n            <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.email.errors.required\">Tavo el. paštas yra privalomas</div>\r\n              <div *ngIf=\"f.email.errors.email\">Tavo el. paštas kažkoks ne toks</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Sūrelio tipas</label>\r\n            <input type=\"text\" formControlName=\"type\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.type.errors }\" />\r\n            <div *ngIf=\"submitted && f.type.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.type.errors.required\">Sūrelio tipas privalomas</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <button class=\"btn btn-primary\">Sukurti</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"jumbotron\">\r\n  <div class=\"container\">\r\n    <h1>Sūreliai</h1>\r\n\r\n    <div class=\"example-container mat-elevation-z8\">\r\n      <div class=\"example-header\">\r\n        <mat-form-field>\r\n          <input matInput #filter (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n          <button mat-icon-button matSuffix aria-label=\"clear\" *ngIf=\"filter.value\" (click)=\"filter.value=''; applyFilter('');\">\r\n            <mat-icon>close</mat-icon>\r\n          </button>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <mat-table #table [dataSource]=\"dataSource\" matSort>\r\n\r\n        <!-- Id Column -->\r\n        <ng-container matColumnDef=\"id\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header> No. </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <mat-form-field floatLabel=\"never\">\r\n              <input matInput placeholder=\"Name\" [value]=\"element.name\" [(ngModel)]=\"element.name\" (ngModelChange)=\"onChange(element)\">\r\n            </mat-form-field>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Email Column -->\r\n        <ng-container matColumnDef=\"email\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Email </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <mat-form-field floatLabel=\"never\">\r\n              <input matInput placeholder=\"email\" [value]=\"element.email\" [(ngModel)]=\"element.email\" (ngModelChange)=\"onChange(element)\">\r\n            </mat-form-field>\r\n          </mat-cell>\r\n        </ng-container>\r\n        \r\n        <!-- Type Column -->\r\n        <ng-container matColumnDef=\"type\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Type </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <mat-form-field floatLabel=\"never\">\r\n              <input matInput placeholder=\"type\" [value]=\"element.type\" [(ngModel)]=\"element.type\" (ngModelChange)=\"onChange(element)\">\r\n            </mat-form-field>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n\r\n      <mat-paginator #paginator \r\n                [length]=\"dataSource?.filteredData.length\"\r\n                [pageIndex]=\"0\"\r\n                [pageSize]=\"10\">\r\n      </mat-paginator>\r\n\r\n      <button class=\"btn btn-primary\" (click)=\"onEditTable()\">Koreguoti</button>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CurdSnackService } from '../curd-snack.service';\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\nimport { Snack } from '../snack';\n\n@Component({\n  selector: 'app-create-curd-snack',\n  templateUrl: './create-curd-snack.component.html',\n  styleUrls: ['./create-curd-snack.component.css']\n})\nexport class CreateCurdSnackComponent implements OnInit {\n\n  registerForm: FormGroup;\n  submitted = false;\n  dataSource = new MatTableDataSource([]);\n  displayedColumns = ['id', 'name', 'email', 'type'];\n  editableDataCollection = [];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private formBuilder: FormBuilder,\n              private route: ActivatedRoute,\n              private service: CurdSnackService) { }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.registerForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      name: ['', Validators.required],\n      type: ['', Validators.required]\n    });\n\n    this.service.getCurdSnacks().subscribe(\n      response => {\n        this.dataSource = new MatTableDataSource(response);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }\n    );\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  onChange(row: Snack){\n    if(!this.editableDataCollection.includes(row.id)){\n      this.editableDataCollection.push(row.id);\n    }\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    var data = this.registerForm.value;\n\n    this.service.postCurdSnacks(this.registerForm.value).subscribe( response => {\n      this.service.getCurdSnacks().subscribe(\n        response => {\n          this.dataSource = new MatTableDataSource(response);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        }\n      );\n    });\n  }\n\n  onEditTable(){\n    var editableList = this.dataSource.filteredData.filter(item => {\n      if(this.editableDataCollection.includes(item.id)){\n        return item;\n      }\n    })\n    this.service.putCurdSnacks(editableList).subscribe();\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Snack } from '../app/snack';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CurdSnackService {\n  apiUrl: string;\n\n  constructor(private http: HttpClient) { this.apiUrl = 'http://localhost:58055/api/'; }\n\n  getCurdSnacks(){\n    return this.http.get<Snack[]>(this.apiUrl + 'CurdSnacks', httpOptions);\n  };\n\n  postCurdSnacks(data: Snack){\n    return this.http.post(this.apiUrl + 'CurdSnacks', data, httpOptions);\n  }\n\n  putCurdSnacks(data: Snack[]){\n    return this.http.put(this.apiUrl + 'CurdSnacks', JSON.stringify(data), httpOptions);\n  }\n}","<p>\n  edit-curd-snack works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-curd-snack',\n  templateUrl: './edit-curd-snack.component.html',\n  styleUrls: ['./edit-curd-snack.component.css']\n})\nexport class EditCurdSnackComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}